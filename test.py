import urllib.request
from lxml import etree


def get_proxy(page):
    """
    功能：获取 快代理 网站上的最新免费代理IP
    参数： page 页数
    返回：存有代理 IP 的列表 proxyList
    """

    # 存放获取到的代理 IP 信息
    proxyList = []

    # 访问 快代理 网站，获取第 page 页的网页信息
    headers = {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11"
    }
    request = urllib.request.Request("https://www.kuaidaili.com/free/inha/" + str(page), headers=headers)
    html = urllib.request.urlopen(request).read()

    # 解析网页信息，从中提取代理 ip 的数据
    content = etree.HTML(html)
    ip = content.xpath('//td[@data-title="IP"]/text()')
    port = content.xpath('//td[@data-title="PORT"]/text()')

    # 将代理 ip 信息存入 proxyList 列表
    for i in ip:
        for p in port:
            proxyList.append(i + ':' + p)

    return proxyList


pl = get_proxy(1)
print(pl)
pl = ['123.169.35.181:9999', '123.169.35.181:9999', '123.169.35.181:9999', '123.169.35.181:9999',
      '123.169.35.181:9000', '123.169.35.181:9999', '123.169.35.181:9999', '123.169.35.181:9999',
      '123.169.35.181:9999', '123.169.35.181:9999', '123.169.35.181:9999', '123.169.35.181:9999',
      '123.169.35.181:9999', '123.169.35.181:9999', '123.169.35.181:9999', '123.169.113.115:9999',
      '123.169.113.115:9999', '123.169.113.115:9999', '123.169.113.115:9999', '123.169.113.115:9000',
      '123.169.113.115:9999', '123.169.113.115:9999', '123.169.113.115:9999', '123.169.113.115:9999',
      '123.169.113.115:9999', '123.169.113.115:9999', '123.169.113.115:9999', '123.169.113.115:9999',
      '123.169.113.115:9999', '123.169.113.115:9999', '114.230.120.46:9999', '114.230.120.46:9999',
      '114.230.120.46:9999', '114.230.120.46:9999', '114.230.120.46:9000', '114.230.120.46:9999',
      '114.230.120.46:9999', '114.230.120.46:9999', '114.230.120.46:9999', '114.230.120.46:9999',
      '114.230.120.46:9999', '114.230.120.46:9999', '114.230.120.46:9999', '114.230.120.46:9999',
      '114.230.120.46:9999', '36.248.132.76:9999', '36.248.132.76:9999', '36.248.132.76:9999',
      '36.248.132.76:9999', '36.248.132.76:9000', '36.248.132.76:9999', '36.248.132.76:9999',
      '36.248.132.76:9999', '36.248.132.76:9999', '36.248.132.76:9999', '36.248.132.76:9999',
      '36.248.132.76:9999', '36.248.132.76:9999', '36.248.132.76:9999', '36.248.132.76:9999',
      '122.234.95.69:9999', '122.234.95.69:9999', '122.234.95.69:9999', '122.234.95.69:9999',
      '122.234.95.69:9000', '122.234.95.69:9999', '122.234.95.69:9999', '122.234.95.69:9999',
      '122.234.95.69:9999', '122.234.95.69:9999', '122.234.95.69:9999', '122.234.95.69:9999',
      '122.234.95.69:9999', '122.234.95.69:9999', '122.234.95.69:9999', '123.101.65.141:9999',
      '123.101.65.141:9999', '123.101.65.141:9999', '123.101.65.141:9999', '123.101.65.141:9000',
      '123.101.65.141:9999', '123.101.65.141:9999', '123.101.65.141:9999', '123.101.65.141:9999',
      '123.101.65.141:9999', '123.101.65.141:9999', '123.101.65.141:9999', '123.101.65.141:9999',
      '123.101.65.141:9999', '123.101.65.141:9999', '60.174.191.45:9999', '60.174.191.45:9999',
      '60.174.191.45:9999', '60.174.191.45:9999', '60.174.191.45:9000', '60.174.191.45:9999',
      '60.174.191.45:9999', '60.174.191.45:9999', '60.174.191.45:9999', '60.174.191.45:9999',
      '60.174.191.45:9999', '60.174.191.45:9999', '60.174.191.45:9999', '60.174.191.45:9999',
      '60.174.191.45:9999', '171.11.28.31:9999', '171.11.28.31:9999', '171.11.28.31:9999',
      '171.11.28.31:9999', '171.11.28.31:9000', '171.11.28.31:9999', '171.11.28.31:9999',
      '171.11.28.31:9999', '171.11.28.31:9999', '171.11.28.31:9999', '171.11.28.31:9999',
      '171.11.28.31:9999', '171.11.28.31:9999', '171.11.28.31:9999', '171.11.28.31:9999',
      '183.166.132.118:9999', '183.166.132.118:9999', '183.166.132.118:9999', '183.166.132.118:9999',
      '183.166.132.118:9000', '183.166.132.118:9999', '183.166.132.118:9999', '183.166.132.118:9999',
      '183.166.132.118:9999', '183.166.132.118:9999', '183.166.132.118:9999', '183.166.132.118:9999',
      '183.166.132.118:9999', '183.166.132.118:9999', '183.166.132.118:9999', '36.249.52.36:9999',
      '36.249.52.36:9999', '36.249.52.36:9999', '36.249.52.36:9999', '36.249.52.36:9000',
      '36.249.52.36:9999', '36.249.52.36:9999', '36.249.52.36:9999', '36.249.52.36:9999',
      '36.249.52.36:9999', '36.249.52.36:9999', '36.249.52.36:9999', '36.249.52.36:9999',
      '36.249.52.36:9999', '36.249.52.36:9999', '175.42.128.45:9999', '175.42.128.45:9999',
      '175.42.128.45:9999', '175.42.128.45:9999', '175.42.128.45:9000', '175.42.128.45:9999',
      '175.42.128.45:9999', '175.42.128.45:9999', '175.42.128.45:9999', '175.42.128.45:9999',
      '175.42.128.45:9999', '175.42.128.45:9999', '175.42.128.45:9999', '175.42.128.45:9999',
      '175.42.128.45:9999', '175.42.128.220:9999', '175.42.128.220:9999', '175.42.128.220:9999',
      '175.42.128.220:9999', '175.42.128.220:9000', '175.42.128.220:9999', '175.42.128.220:9999',
      '175.42.128.220:9999', '175.42.128.220:9999', '175.42.128.220:9999', '175.42.128.220:9999',
      '175.42.128.220:9999', '175.42.128.220:9999', '175.42.128.220:9999', '175.42.128.220:9999',
      '117.95.232.169:9999', '117.95.232.169:9999', '117.95.232.169:9999', '117.95.232.169:9999',
      '117.95.232.169:9000', '117.95.232.169:9999', '117.95.232.169:9999', '117.95.232.169:9999',
      '117.95.232.169:9999', '117.95.232.169:9999', '117.95.232.169:9999', '117.95.232.169:9999',
      '117.95.232.169:9999', '117.95.232.169:9999', '117.95.232.169:9999', '175.43.85.64:9999',
      '175.43.85.64:9999', '175.43.85.64:9999', '175.43.85.64:9999', '175.43.85.64:9000',
      '175.43.85.64:9999', '175.43.85.64:9999', '175.43.85.64:9999', '175.43.85.64:9999',
      '175.43.85.64:9999', '175.43.85.64:9999', '175.43.85.64:9999', '175.43.85.64:9999',
      '175.43.85.64:9999', '175.43.85.64:9999', '175.42.129.162:9999', '175.42.129.162:9999',
      '175.42.129.162:9999', '175.42.129.162:9999', '175.42.129.162:9000', '175.42.129.162:9999',
      '175.42.129.162:9999', '175.42.129.162:9999', '175.42.129.162:9999', '175.42.129.162:9999',
      '175.42.129.162:9999', '175.42.129.162:9999', '175.42.129.162:9999', '175.42.129.162:9999',
      '175.42.129.162:9999']

ser_agent = random.choice(USER_AGENTS)
proxy = random.choice(proxyList)

url = 'https://blog.csdn.net/wenxuhonghe/article/details/85036674'

headers = {
    "Connection": "keep-alive",
    "Cache-Control": "max-age=0",
    "Upgrade-Insecure-Requests": "1",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
    "Accept-Language": "zh-CN,zh;q=0.9",
    "Cookie": ""
}

try:
    # 构建一个Handler处理器对象，参数是一个字典类型，包括代理类型和代理服务器IP+PROT
    httpproxy_handler = urllib.request.ProxyHandler({"http": proxy})
    opener = urllib.request.build_opener(httpproxy_handler)
    urllib.request.install_opener(opener)
    request = urllib.request.Request(url, headers=headers)
    request.add_header("User-Agent", user_agent)
    response = urllib.request.urlopen(request)
    html = response.read()

    # 解析目标页面，提取相关信息
    parse_data(html)

    time.sleep(1)

except Exception as result:
    print("错误信息:%s" % (result))